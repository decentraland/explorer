version: 2
jobs:
  build-test:
    resource_class: xlarge
    docker:
      - image: decentraland/renderer-build
        environment:
          - BUILD_TARGET: WebGL
          - BUILD_PATH: /tmp/project/Builds/unity
          - BUILD_NAME: unity
    working_directory: /tmp/project
    steps:
      - checkout

      - run:
          name: "Download LFS files"
          command: |
            ssh git@github.com git-lfs-authenticate decentraland/unity-client.git download
            git lfs install
            git lfs fetch --all
            git lfs checkout -- .

      - run:
          name: "Extract the license key"
          command: |
            openssl enc -d -aes-256-cbc -md sha256 -in ./.circleci/license.zip-cipher -out ./.circleci/license.zip -k ${CIPHER_KEY}
            cd / && unzip /tmp/project/.circleci/license.zip

      - run:
          name: Get the hash of source files
          command: |
            find Assets -type f \( -exec shasum "$PWD"/{} \; \) | sort | shasum > .build-checksum

      - restore_cache:
          name: Restore build
          keys:
            - unitybuild-{{ checksum ".build-checksum" }}

      - run:
          name: "Build"
          command: |
            if [[ ! -e ${BUILD_PATH} ]] || [[ ! -n "$(ls -A ${BUILD_PATH})" ]]; then
                chmod +x /tmp/project/build-ci.sh
                mkdir -p ${BUILD_PATH}
                ((cd /tmp/project && ./build-ci.sh) & echo $! > /tmp/project/build.pid &)
                pid=`cat /tmp/project/build.pid`
                while [ -e /proc/$pid -a /proc/$pid/exe ]; do
                    echo "Running Unity Build..."
                    sleep 60
                done
                ls -la ${BUILD_PATH}
                [ -n "$(ls -A ${BUILD_PATH})" ] # fail job if build folder is empty
            fi;

      - save_cache:
          name: Store build
          key: unitybuild-{{ checksum ".build-checksum" }}
          paths:
            - /tmp/project/Builds/

      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=${NPMTOKEN}" > /tmp/project/Builds/${BUILD_NAME}/.npmrc

      - run:
          name: Publish package
          command: |
            . .circleci/publish.sh

workflows:
  version: 2
  build:
    jobs:
      - build-test
