{
  "display": {
    "title": "Simon Says"
  },
  "owner": "Agus",
  "contact": {
    "name": "Agus",
    "email": "agus@decentraland.org"
  },
  "scene": {
    "parcels": [
      "-200,235"
    ],
    "base": "-200,235"
  },
  "policy": {
    "fly": true,
    "voiceEnabled": true,
    "blacklist": [],
    "teleportPosition": "0,0,0"
  },
  "main": "game.js",
  "staticScene": null,
  "_mappings": {
    "game.js": "data:application/javascript;base64,"
  }
}
